diff -r -u -p a/dlls/ws2_32/socket.c b/dlls/ws2_32/socket.c
--- a/dlls/ws2_32/socket.c	2009-12-11 14:23:35.000000000 +0100
+++ b/dlls/ws2_32/socket.c	2009-12-11 14:26:09.688520072 +0100
@@ -2721,6 +2721,7 @@ INT WINAPI WSAIoctl(SOCKET s,
    case WS_SIO_GET_EXTENSION_FUNCTION_POINTER:
    {
         GUID acceptex_guid = WSAID_ACCEPTEX;
+        GUID getacceptexsockaddrs_guid = WSAID_GETACCEPTEXSOCKADDRS;
 
         if ( IsEqualGUID(&acceptex_guid, lpvInBuffer) )
         {
@@ -2728,6 +2729,12 @@ INT WINAPI WSAIoctl(SOCKET s,
             WSASetLastError(STATUS_SUCCESS);
             return STATUS_SUCCESS;
         }
+        if ( IsEqualGUID(&getacceptexsockaddrs_guid, lpvInBuffer) )
+        {
+            *(LPFN_GETACCEPTEXSOCKADDRS *)lpbOutBuffer = GetAcceptExSockaddrs;
+            WSASetLastError(STATUS_SUCCESS);
+            return STATUS_SUCCESS;
+        }
 
         FIXME("SIO_GET_EXTENSION_FUNCTION_POINTER %s: stub\n", debugstr_guid(lpvInBuffer));
         WSASetLastError(WSAEOPNOTSUPP);
@@ -5038,6 +5045,41 @@ BOOL WINAPI AcceptEx( SOCKET listener, S
 }
 
 /***********************************************************************
+ *     GetAcceptExSockaddrs (ws2_32.@)
+ *
+ * Get infomation about an accepted socket.
+ *
+ * buf                 [O] Destination for the first block of data from AcceptEx()
+ * data_size           [I] length of data in bytes
+ * local_size          [I] Bytes reserved for local addrinfo
+ * remote_size         [I] Bytes reserved for remote addrinfo
+ * local_addr          [O] Destination for local sockaddr
+ * local_addr_len      [I] Size of local_addr
+ * remote_addr         [O] Destination for remote sockaddr
+ * remote_addr_len     [I] Size of rem_addr
+ *
+ * RETURNS
+ *  Nothing.
+ */
+void WINAPI GetAcceptExSockaddrs( PVOID buf, DWORD data_size, DWORD local_size, DWORD remote_size,
+                                  struct sockaddr **local_addr, LPINT local_addr_len,
+                                  struct sockaddr **remote_addr, LPINT remote_addr_len )
+{
+    char *cbuf = buf;
+    TRACE("(%p, %d, %d, %d, %p, %p, %p, %p)\n", buf, data_size, local_size, remote_size, local_addr,
+                                                local_addr_len, remote_addr, remote_addr_len );
+    cbuf += data_size;
+
+    *local_addr_len = *(int *) cbuf;
+    *local_addr = (struct sockaddr *)(cbuf + sizeof(int));
+
+    cbuf += local_size;
+
+    *remote_addr_len = *(int *) cbuf;
+    *remote_addr = (struct sockaddr *)(cbuf + sizeof(int));
+}
+
+/***********************************************************************
  *              WSADuplicateSocketA                      (WS2_32.32)
  */
 int WINAPI WSADuplicateSocketA( SOCKET s, DWORD dwProcessId, LPWSAPROTOCOL_INFOA lpProtocolInfo )
